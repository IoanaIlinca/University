     1                                  ; exercitiul 10 - a doua parte - cu semn
     2                                  ; d - (7 - a * b + c)/ a - 6 + x/2 ; a, c - byte; b - word; d - doubleword; x - qword
     3                                  bits 32 
     4                                  global  start 
     5                                  
     6                                  extern  exit
     7                                  import  exit msvcrt.dll
     8                                  segment  data use32 class=data 
     9 00000000 01                      	a db 1
    10 00000001 0800                    	b dw 8
    11 00000003 0A                      	c db 10
    12 00000004 C8000000                	d dd 200
    13 00000008 0000                        aux dw 0
    14 0000000A 02000000                    aux2 dd 2
    15 0000000E 5000000000000000        	x dq 80
    16                                  segment  code use32 class=code 
    17                                  start:
    18 00000000 A0[00000000]                mov al, [a] ; mutam a in al
    19 00000005 6698                        cbw ; conversie de la al la ax cu semn
    20 00000007 66F72D[01000000]            imul word [b] ; dx:ax = a * b
    21 0000000E 6689D1                      mov cx, dx
    22 00000011 6689C3                      mov bx, ax ;cx:bx = a * b
    23                                      
    24 00000014 A0[03000000]                mov al, [c] ; al = c
    25 00000019 6698                        cbw ; al -> ax cu semn
    26 0000001B 6683D007                    adc ax, 7 ; aduna cf in ax, ax = 7 + c
    27 0000001F 6699                        cwd ; ax devine dx:ax = 7 + c
    28                                      
    29 00000021 6629D8                      sub ax, bx
    30 00000024 6619CA                      sbb dx, cx ; dx:ax = 7 - a * b + c 
    31 00000027 6689D1                      mov cx, dx
    32 0000002A 6689C3                      mov bx, ax ; cx:bx = 7 - a * b + c 
    33 0000002D A0[00000000]                mov al, [a]
    34 00000032 6698                        cbw ; ax = a
    35 00000034 66A3[08000000]              mov [aux], ax; aux = a
    36                                      
    37                                      
    38 0000003A 6689D8                      mov ax, bx
    39 0000003D 6689CA                      mov dx, cx ; dx:ax = 7 - a * b + c 
    40 00000040 66F73D[08000000]            idiv word [aux] ; AX ← DX:AX / aux, DX ← DX:AX % aux
    41                                                  ; ax = (7 - a * b + c) / a
    42                                                  
    43 00000047 8B1D[04000000]              mov ebx, [d]
    44 0000004D 83DB06                      sbb ebx, 6 ; ebx = d - 6
    45                                      
    46 00000050 98                          cwde ; ax devine eax = (7 - a * b + c) / a
    47                                      
    48 00000051 29C3                        sub ebx, eax ; ebx = d - (7 - a * b + c) / a - 6
    49 00000053 83DB00                      sbb ebx, 0 ; ebx = d - (7 - a * b + c) / a - 6 + CF
    50                                      
    51 00000056 A1[0E000000]                mov eax, dword [x]
    52 0000005B 8B15[12000000]              mov edx, dword [x + 4]  ; edx:eax = x
    53 00000061 F73D[0A000000]              idiv dword [aux2] ; eax = x / 2, edx = x % 2
    54                                      
    55 00000067 11D8                        adc eax, ebx ; eax = d - (7 - a * b + c) / a - 6 + x / 2
    56 00000069 99                          cdq ; edx:eax = d - (7 - a * b + c) / a - 6 + x / 2
    57                                      
    58                                  	
    59 0000006A 6A00                    	push dword 0 ;se pune pe stiva codul de retur al functiei exit
    60 0000006C FF15[00000000]          	call [exit] ;apelul functiei sistem exit pentru terminarea executiei programului
