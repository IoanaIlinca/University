     1                                  ; eax = fread (*str, size, count, FILE)
     2                                  ; eax = fopen (*name, *mode)
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit, printf, scanf, fread, fopen, fclose             ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  import fread msvcrt.dll
    14                                  import fopen msvcrt.dll
    15                                  import fclose msvcrt.dll
    16                                  
    17                                  ; our data is declared here (the variables needed by our program)
    18                                  segment data use32 class=data
    19 00000000 616E612E74787400            n db "ana.txt", 0
    20 00000008 7200                        m db "r", 0
    21 0000000A FFFFFFFF                    d_f dd -1 ; = d_f resd -1
    22 0000000E 00000000                    c dd 0
    23 00000012 <res 00000064>              buff resb 100
    24                                      len equ $-buff
    25                                  
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29 00000000 68[08000000]                    push m
    30 00000005 68[00000000]                    push n
    31 0000000A FF15[00000000]                  call [fopen]
    32 00000010 83F800                          cmp eax, 0
    33 00000013 7434                            je .end
    34 00000015 A3[0A000000]                    mov [d_f], eax
    35 0000001A 83C408                          add esp, 4 * 2
    36                                          .r
    36          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    37 0000001D FF35[0A000000]                  push dword [d_f]
    38 00000023 6A64                            push len
    39 00000025 6A01                            push 1
    40 00000027 68[12000000]                    push buff
    41 0000002C FF15[00000000]                  call [fread]
    42 00000032 83F864                          cmp eax, len
    43 00000035 83C410                          add esp, 4 * 4
    44 00000038 74E3                            je .r
    45                                          
    46 0000003A FF35[0A000000]                  push dword [d_f]
    47 00000040 FF15[00000000]                  call [fclose]
    48 00000046 83C404                          add esp, 4 * 1
    49                                          
    50                                          
    51                                          .end
    51          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    52                                          ; exit(0)
    53 00000049 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 0000004B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
